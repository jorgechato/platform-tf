%{ for service in services ~}
# ${service.name}
%{ for location in service.locations ~}
upstream ${location.name} {
    server ${location.host}:${location.port};
}
%{ endfor ~}

server {
    listen ${service.listen.port} ${service.listen.protocol};
    listen [::]:${service.listen.port} ${service.listen.protocol};
    server_name ${service.hosts};
    charset utf-8;
    root /${service.name};

    %{~ if service.listen.protocol == "ssl" ~}
    ssl_certificate SSL_CERT;
    ssl_certificate_key SSL_KEY;
    ssl_trusted_certificate SSL_CHAIN_CERT;
    ssl_verify_client off;
    %{~ endif ~}

    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
    limit_conn perip 10;

    client_max_body_size 2G;

    %{~ for location in service.locations ~}
    location /${location.path} {
        %{~ if location.path != "" ~}
        rewrite ^/${location.path}(.*) /$1 break;
        %{~ endif ~}
        try_files $uri @${location.name};
    }

    location @${location.name} {
        proxy_set_header Host $http_host;
        # proxy_set_header X-Forwarded-SSL on;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;

        proxy_pass http://${location.name};
    }
    %{~ endfor ~}
}

%{ endfor }
